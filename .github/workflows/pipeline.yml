name: CICD

on: 
  push

jobs:
  hello_world:
    name: print Hello World
    runs-on: ubuntu-latest
    steps:
      - name: print Hello World
        run: echo "Hello World!"

      - name: print Secret
        run: echo ${{secrets.MY_SECRET}}


      - uses: actions/checkout@v2

      - name: set executable sh
        run: chmod +x ./run.sh
        shell: bash

      - name: run sh
        run: ./run.sh
        shell: bash

      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: echo “Hello World”

      - name: copying remote shell script using password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          source: ./run.sh
          target: .

      - name: executing remote shell script using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: ./run.sh

  test_backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 18
        uses: actions/setup-java@v1
        with:
          distribution: 'temurin'
          java-version: '18'
          cache: 'gradle'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Test with Gradle
        run: ./gradlew test
        #Commentet out to not use money
      #- name: check sonarqube
      #  run: ./gradlew sonarqube --info -Dsonar.projectKey=uk223  -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  build_and_push:
    name: build docker image and push it
    runs-on: ubuntu-latest
    needs: test_backend
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: build and push docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/docker-backend:${{git rev-parse --short HEAD}}